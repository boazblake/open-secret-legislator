{"version":3,"sources":["app/app.js","app/index.js","app/initialize.js","app/model.js"],"names":["toChartData","states","lastUpdated","lastUpdate","format","lat","lon","text","markerSize","divide","type","locationmode","hoverinfo","marker","size","map","line","color","width","formatState","provinceState","long","confirmed","recovered","deaths","active","filterForUSA","countries","toPlot","dom","details","USLayout","title","showlegend","geo","scope","projection","showland","landcolor","subunitwidth","countrywidth","subunitcolor","countrycolor","Plotly","newPlot","formatLocation","locations","getDetailsAndPlot","mdl","url","onSuccess","data","onError","err","m","request","then","WuhanCrisis","oncreate","attrs","wuhan","detail","view","IsLoading","style","margin","background","display","loadWuhanVirusData","wuhanStyle","height","WuhanVirus","oninit","root","document","body","winW","window","innerWidth","module","hot","accept","process","env","NODE_ENV","console","log","navigator","addEventListener","serviceWorker","register","registration","registrationError","getProfile","w","checkWidth","lastProfile","model","settings","profile","redraw","requestAnimationFrame","mount","require","state"],"mappings":"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","file":"docs/app.js","sourcesContent":["import {\n  divide,\n  filter,\n  pluck,\n  compose,\n  propEq,\n  zipWith,\n  multiply\n} from \"ramda\"\n\nimport M from \"moment\"\n\nconst toChartData = (states) => {\n  let lastUpdated = M(states[0].lastUpdate).format(\"YYYY-MM-DD\")\n  let lat = pluck(\"lat\", states)\n  let lon = pluck(\"long\", states)\n  let text = pluck(\"text\", states)\n  let markerSize = zipWith(\n    divide,\n    pluck(\"deaths\", states),\n    pluck(\"confirmed\", states)\n  )\n  return [\n    {\n      type: \"scattergeo\",\n      locationmode: \"USA-states\",\n      lat,\n      lon,\n      hoverinfo: \"text\",\n      text,\n      lastUpdated,\n      marker: {\n        size: markerSize.map(multiply(100)),\n        line: {\n          color: \"black\",\n          width: 2\n        }\n      }\n    }\n  ]\n}\n\nconst formatState = ({\n  provinceState,\n  lat,\n  long,\n  confirmed,\n  recovered,\n  deaths,\n  active,\n  lastUpdate\n}) => ({\n  lat,\n  long,\n  text: `${provinceState}: confirmed: ${confirmed}, recovered: ${recovered}, deaths: ${deaths}, active: ${active}`,\n  confirmed,\n  recovered,\n  deaths,\n  active,\n  lastUpdate\n})\n\nconst filterForUSA = (countries) =>\n  filter(propEq(\"countryRegion\", \"US\"), countries)\n\nconst toPlot = (dom) => (details) => {\n  var USLayout = {\n    title: `2020 US City WuHan virus Epidemic; last Updated: ${details[0].lastUpdated}`,\n    showlegend: false,\n    geo: {\n      scope: \"usa\",\n      projection: {\n        type: \"albers usa\"\n      },\n      showland: true,\n      landcolor: \"rgb(217, 217, 217)\",\n      subunitwidth: 1,\n      countrywidth: 1,\n      subunitcolor: \"rgb(255,255,255)\",\n      countrycolor: \"rgb(255,255,255)\"\n    }\n  }\n  Plotly.newPlot(dom, details, USLayout)\n}\n\nconst formatLocation = (locations) => filterForUSA(locations).map(formatState)\n\nconst getDetailsAndPlot = ({ dom, mdl, url }) => {\n  const onSuccess = (mdl) => (details) => {\n    mdl.data.details = compose(\n      toPlot(dom),\n      toChartData,\n      formatLocation\n    )(details)\n  }\n  const onError = (mdl) => (err) => {\n    mdl.err = err\n  }\n\n  m.request(url).then(onSuccess(mdl), onError(mdl))\n}\n\nconst WuhanCrisis = () => {\n  return {\n    oncreate: ({ dom, attrs: { mdl } }) => {\n      getDetailsAndPlot({ dom, mdl, url: mdl.data.wuhan.confirmed.detail })\n    },\n    view: () => m(\".container\")\n  }\n}\n\nconst IsLoading = m(\n  \"svg[xmlns='http://www.w3.org/2000/svg'][xmlns:xlink='http://www.w3.org/1999/xlink'][width='200px'][height='200px'][viewBox='0 0 100 100'][preserveAspectRatio='xMidYMid']\",\n  {\n    style: {\n      margin: \"auto\",\n      background: \"rgb(241, 242, 243)\",\n      display: \"block\",\n      \"shape-rendering\": \"auto\"\n    }\n  },\n  m(\n    \"path[d='M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50'][fill='#85a2b6'][stroke='none'][transform='rotate(17.5738 50 51)']\",\n    m(\n      \"animateTransform[attributeName='transform'][type='rotate'][dur='1s'][repeatCount='indefinite'][keyTimes='0;1'][values='0 50 51;360 50 51']\"\n    )\n  )\n)\n\nconst loadWuhanVirusData = (mdl) => {\n  const onError = (mdl) => (err) => (mdl.err.wuhan = err)\n  const onSuccess = (mdl) => (data) => (mdl.data.wuhan = data)\n  m.request(\"https://covid19.mathdro.id/api\").then(onSuccess(mdl), onError(mdl))\n}\n\nconst wuhanStyle = (mdl) => ({\n  // backgroundImage: `url(${mdl.data.wuhan.image}) center`,\n  height: \"100vh\",\n  width: \"100vw\"\n})\nconst WuhanVirus = (mdl) => {\n  return {\n    oninit: () => loadWuhanVirusData(mdl),\n    view: () =>\n      mdl.data.wuhan\n        ? m(\".container\", { style: wuhanStyle(mdl) }, [m(WuhanCrisis, { mdl })])\n        : IsLoading\n  }\n}\n\nexport default WuhanVirus\n","import WuhanVirus from \"./app.js\"\nimport model from \"./model.js\"\n\nconst root = document.body\nlet winW = window.innerWidth\n\nif (module.hot) {\n  module.hot.accept()\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  console.log(\"Looks like we are in development mode!\")\n} else {\n  if (\"serviceWorker\" in navigator) {\n    window.addEventListener(\"load\", () => {\n      navigator.serviceWorker\n        .register(\"./service-worker.js\")\n        .then((registration) => {\n          console.log(\"⚙️ SW registered: \", registration)\n        })\n        .catch((registrationError) => {\n          console.log(\"🧟 SW registration failed: \", registrationError)\n        })\n    })\n  }\n}\n\n// set display profiles\nconst getProfile = (w) => {\n  if (w < 668) return \"phone\"\n  if (w < 920) return \"tablet\"\n  return \"desktop\"\n}\n\nconst checkWidth = (winW) => {\n  const w = window.innerWidth\n  if (winW !== w) {\n    winW = w\n    var lastProfile = model.settings.profile\n    model.settings.profile = getProfile(w)\n    if (lastProfile != model.settings.profile) m.redraw()\n  }\n  return requestAnimationFrame(checkWidth)\n}\n\nmodel.settings.profile = getProfile(winW)\n\ncheckWidth(winW)\n\nm.mount(root, WuhanVirus(model))\n","document.addEventListener(\"DOMContentLoaded\", () => {\n  require(\"./index.js\")\n})\n","const model = {\n  data: { wuhan: null, details: null },\n  err: null,\n  state: null,\n  settings: {}\n}\n\nexport default model\n"]}